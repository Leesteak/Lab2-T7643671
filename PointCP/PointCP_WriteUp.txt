Hand in your answers to exercises E26 (table of what you think will be the advantages and disadvantages of designs 2, 3 and 6), and E28-E30 (performance analysis, comparing all three designs you have implemented instead of Design 1 with Design 5 as the book says).
To do this evaluation, for each design create random instances and then call each method many thousands of times, and then find the elapsed time in milliseconds for the fixed number of iterations. Make sure that your program runs each time for about 10 seconds, so you get a good measure of performance. Test each method separately. Run each version several times to ensure that your results are consistent and use the median result as your definitive result, plus give the maximum and minimum.

Create a table describing the various advantages (pros) and disadvantages
(cons) of each of the five design alternatives. Some of the factors to consider
are: simplicity of code, efficiency when creating instances, efficiency when doing computations that require both coordinate systems, and amount of
memory used.

Table
-----------------------------------------
Design         |       Pros        |    Cons
------------------------------------------------------
2: Polar Only  | Data Integrity is | Must be converted
               | preserved because | to Cartesian In 
		    | there is no conver| order to display
               | sions
                              | in cartesian
------------------------------------------------------
3: Cartesian   | Data Integrity is | Must be converted
Only           | preserved because | to polar In order
		    | there is no conver| to display in car
               | sions             | tesian
------------------------------------------------------
6: Abstract Int| 
erface